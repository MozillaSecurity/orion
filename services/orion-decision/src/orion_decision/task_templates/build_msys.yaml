taskGroupId: "${task_group}"
dependencies: []
created: "${now}"
deadline: "${deadline}"
provisionerId: "${provisioner}"
schedulerId: "${scheduler}"
workerType: "${worker}"
payload:
  artifacts:
    - expires: "${expires}"
      name: public/msys2.tar.bz2
      path: msys2.tar.bz2
      type: file
  command:
    - set HOME=%CD%
    - set ARTIFACTS=%CD%
    - C:\cygwin\bin\curl.exe -sSL --connect-timeout 25 --fail --retry 5 "${msys_base_url}" -o msys2.tar.xz
    - C:\cygwin\bin\tar.exe -I /bin/xz -xf msys2.tar.xz
    - del msys2.tar.xz
    - set PATH=%CD%\msys64\MINGW64\bin;%PATH%
    - set PATH=%CD%\msys64\usr\bin;%PATH%
    - bash -lc ' '
    # create a wrapper around `pacman -Syu` since it may kill itself!
    - printf "@echo off\r\nbash -c -x -e 'retry () { i=0; while [ $$i -lt 9 ]; do if \"$$@\"; then return; else sleep 30; fi; i=\"$${i+1}\"; done; \"$$@\"; }; retry pacman --noconfirm -Syuu'\r\nexit /b 0\r\n" > pacman_upd.bat
    - .\pacman_upd.bat  # Core update (in case any core packages are outdated)
    - .\pacman_upd.bat  # Normal update
    - git -c init.defaultBranch=clone init orion
    - cd orion
    - git remote add origin "${clone_url}"
    - bash -c -x -e "retry () { i=0; while [ $$i -lt 9 ]; do if \"$$@\"; then return; else sleep 30; fi; i=\"$${i+1}\"; done; \"$$@\"; }; retry git fetch -q --depth=1 origin \"${commit}\""
    - git -c advice.detachedHead=false checkout "${commit}"
    - cd ..
    - bash -c -x -e "./orion/${setup_sh_path}"
  env:
    MSYSTEM: MINGW64
  maxRunTime: !!int "${max_run_time}"
  onExitStatus:
    retry:
      - 0x40010004
routes:
  - "index.project.fuzzing.orion.${service_name}.rev.${commit}"
scopes:
  - "queue:scheduler-id:${scheduler}"
metadata:
  description: "Build the MSYS tar for ${service_name} tasks"
  name: "Orion ${service_name} MSYS build"
  owner: "${owner_email}"
  source: "${source_url}"
